version: '3.8'

services:
  # GlobeTrotter API
  api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DATABASE=globetrotter
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=development-secret-key
      - JWT_EXPIRY_HOURS=72
      - ALLOWED_ORIGINS=*
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - globetrotter-network

  # MongoDB
  mongo:
    image: mongo:7.0
    container_name: globetrotter-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=globetrotter
    volumes:
      - mongo_data:/data/db
    networks:
      - globetrotter-network

  # Redis
  redis:
    image: redis:7.0-alpine
    container_name: globetrotter-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - globetrotter-network

  # MongoDB Express (optional, for development)
  mongo-express:
    image: mongo-express:latest
    container_name: globetrotter-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongo
    networks:
      - globetrotter-network

  # Redis Commander (optional, for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: globetrotter-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=redis:redis:6379
    depends_on:
      - redis
    networks:
      - globetrotter-network

volumes:
  mongo_data:
  redis_data:

networks:
  globetrotter-network:
    driver: bridge
